<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.message.dao.MsgTitleMapper">
	<resultMap id="BaseResultMap" type="com.message.entity.MsgTitle">
		<id column="ID" property="id" jdbcType="VARCHAR" />
		<result column="TITLE_ID" property="titleId" jdbcType="VARCHAR" />
		<result column="TITLE_NAME" property="titleName" jdbcType="VARCHAR" />
		<result column="TITLE_TYPE" property="titleType" jdbcType="VARCHAR" />
		<result column="TYPE_NAME" property="typeName" jdbcType="VARCHAR" />
		<result column="TITLE_CONTENT" property="titleContent"
			jdbcType="VARCHAR" />
	</resultMap>
	<sql id="Base_Column_List">
		ID, TITLE_ID, TITLE_NAME, TITLE_TYPE, TITLE_CONTENT
	</sql>
	<sql id="Param_Column">
		ID, TITLE_ID, TITLE_NAME
	</sql>
	<sql id="Union_Subscribe">
		distinct
		title.ID,title.TITLE_ID,title.TITLE_NAME,title.TITLE_TYPE
	</sql>
	<sql id="Type_Title">
		title.ID,TITLE_ID,TITLE_NAME,TITLE_TYPE,TYPE_NAME,TITLE_CONTENT
	</sql>
	<select id="selectByPrimaryKey" resultMap="BaseResultMap"
		parameterType="java.lang.String">
		select
		<include refid="Base_Column_List" />
		from MSG_TITLE
		where ID = #{id,jdbcType=VARCHAR}
	</select>
	<delete id="deleteByPrimaryKey" parameterType="java.lang.String">
		delete from
		MSG_TITLE
		where ID = #{id,jdbcType=VARCHAR}
	</delete>
	<insert id="insert" parameterType="com.message.entity.MsgTitle">
		insert into MSG_TITLE (ID,
		TITLE_ID, TITLE_NAME,
		TITLE_TYPE, TITLE_CONTENT)
		values
		(#{id,jdbcType=VARCHAR}, #{titleId,jdbcType=VARCHAR},
		#{titleName,jdbcType=VARCHAR},
		#{titleType,jdbcType=VARCHAR},
		#{titleContent,jdbcType=VARCHAR})
	</insert>
	<insert id="insertSelective" parameterType="com.message.entity.MsgTitle">
		insert into MSG_TITLE
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="id != null">
				ID,
			</if>
			<if test="titleId != null">
				TITLE_ID,
			</if>
			<if test="titleName != null">
				TITLE_NAME,
			</if>
			<if test="titleType != null">
				TITLE_TYPE,
			</if>
			<if test="titleContent != null">
				TITLE_CONTENT,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="id != null">
				#{id,jdbcType=VARCHAR},
			</if>
			<if test="titleId != null">
				#{titleId,jdbcType=VARCHAR},
			</if>
			<if test="titleName != null">
				#{titleName,jdbcType=VARCHAR},
			</if>
			<if test="titleType != null">
				#{titleType,jdbcType=VARCHAR},
			</if>
			<if test="titleContent != null">
				#{titleContent,jdbcType=VARCHAR},
			</if>
		</trim>
	</insert>
	<update id="updateByPrimaryKeySelective" parameterType="com.message.entity.MsgTitle">
		update MSG_TITLE
		<set>
			<if test="titleId != null">
				TITLE_ID = #{titleId,jdbcType=VARCHAR},
			</if>
			<if test="titleName != null">
				TITLE_NAME = #{titleName,jdbcType=VARCHAR},
			</if>
			<if test="titleType != null">
				TITLE_TYPE = #{titleType,jdbcType=VARCHAR},
			</if>
			<if test="titleContent != null">
				TITLE_CONTENT = #{titleContent,jdbcType=VARCHAR},
			</if>
		</set>
		where ID = #{id,jdbcType=VARCHAR}
	</update>
	<update id="updateByPrimaryKey" parameterType="com.message.entity.MsgTitle">
		update MSG_TITLE
		set TITLE_ID = #{titleId,jdbcType=VARCHAR},
		TITLE_NAME =
		#{titleName,jdbcType=VARCHAR},
		TITLE_TYPE =
		#{titleType,jdbcType=VARCHAR},
		TITLE_CONTENT =
		#{titleContent,jdbcType=VARCHAR}
		where ID = #{id,jdbcType=VARCHAR}
	</update>

	<!-- 通过主题编号获取对应的主题信息 -->
	<select id="getTitleByTitleId" parameterType="java.lang.String"
		resultMap="BaseResultMap">
		SELECT
		<include refid="Base_Column_List" />
		FROM MSG_TITLE WHERE TITLE_ID =#{titleId}
	</select>

	<!-- 分页查询 -->
	<select id="search" parameterType="com.message.entity.MsgTitle"
		resultMap="BaseResultMap">
		SELECT
		<include refid="Type_Title" />
		from MSG_TITLE title
		inner join msg_title_type titleType on
		title.TITLE_TYPE = titleType.type_id
		WHERE 1=1
		<if test="titleId != null and titleId !=''">
			AND title.TITLE_ID LIKE '%${titleId}%'
		</if>
		<if test="titleName != null and titleName !=''">
			AND title.TITLE_NAME LIKE '%${titleName}%'
		</if>
		<if test="titleType != null and titleType !=''">
			AND title.TITLE_TYPE = #{titleType}
		</if>
		<if test="titleContent != null and titleContent !=''">
			AND TITLE_CONTENT LIKE '%${titleContent}%'
		</if>
		<!-- 排序 -->
		<if test="sort != null and sort !=''">
			ORDER BY ${sort} ${order}
		</if>
	</select>

	<!-- 获取所有主题列表 -->
	<select id="getAllTitle" resultMap="BaseResultMap">
		SELECT
		<include refid="Param_Column" />
		FROM MSG_TITLE
	</select>

	<!-- 获取ids对应的主题信息列表 -->
	<select id="getTitleList" resultMap="BaseResultMap">
		select
		<include refid="Param_Column" />
		from MSG_TITLE
		where ID IN
		<foreach item="item" index="index" collection="array" open="("
			separator="," close=")">
			#{item}
		</foreach>
	</select>

	<!-- 获取主题类型下的主题列表 -->
	<select id="getTitleByType" resultMap="BaseResultMap">
		SELECT
		<include refid="Param_Column" />
		FROM MSG_TITLE WHERE TITLE_TYPE=#{titleType}
	</select>

	<!-- 查询出已经存在有效订阅关系的主题 -->
	<select id="getSubscribeTitle" parameterType="com.message.entity.MsgTitle"
		resultMap="BaseResultMap">
		SELECT
		<include refid="Union_Subscribe" />
		from msg_title title
		inner join msg_subscribe subscribe on
		title.title_id=subscribe.title_id
		where 1=1
		<if test="titleId != null and titleId !=''">
			AND title.TITLE_ID LIKE '%${titleId}%'
		</if>
		<if test="titleName != null and titleName !=''">
			AND title.TITLE_NAME LIKE '%${titleName}%'
		</if>
		<if test="titleType != null and titleType !=''">
			AND title.TITLE_TYPE = #{titleType}
		</if>
	</select>

	<!-- 删除指定id集合的主题 -->
	<delete id="batchDeleteTitle">
		delete from
		MSG_TITLE
		where ID IN
		<foreach item="item" index="index" collection="array" open="("
			separator="," close=")">
			#{item}
		</foreach>
	</delete>
</mapper>